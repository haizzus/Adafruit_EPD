/***************************************************
haizzus: TODO
 ****************************************************/

#include "GoodDisplay.h"
//#include "Ap_29demo.h"
unsigned char gImage_1[2024] = {
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XC1,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X3F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XC7,0XFF,0XFF,0XFE,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,
0XFF,0XFF,0XFC,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X3F,0XFF,0XFC,0X00,0X1F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X01,0XFF,0XFC,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF8,0X01,0XFF,0XF8,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0XFE,0X00,0X00,
0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X3E,0XFE,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,
0XFF,0XC0,0X3E,0XFE,0X00,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,0XFE,0XF8,0X00,
0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,
0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XF0,0X0F,0XF0,0X00,0X00,0X00,0X3F,0XFF,
0XFF,0XFF,0XFF,0XC0,0X0F,0XF0,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,
0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XCE,0XCF,0XF0,0X00,0X00,0X00,0X0F,
0XFF,0XFF,0XFF,0XFF,0XCE,0XEF,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XCE,
0XEF,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XC6,0X0F,0XF0,0X00,0X00,0X00,
0X0F,0XFF,0XFF,0XFF,0XFF,0XF7,0X1F,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,
0XF7,0X1F,0XF8,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,
0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,
0XFC,0X00,0X0F,0XF8,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFC,0X00,0X0F,0XF8,0X00,
0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFC,0X00,0X0F,0XF0,0X00,0X00,0X00,0X03,0XFF,0XFF,
0XFF,0XFF,0XC7,0XEF,0XF0,0X00,0X00,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XC7,0XEF,0XF0,
0X00,0X00,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XCF,0XEF,0XE0,0X00,0X00,0X00,0X00,0XFF,
0XFF,0XFF,0XFF,0XC0,0X0F,0XE0,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,
0XE0,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0X80,0X00,0X00,0X00,0X00,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X00,0X00,
0X00,0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0X80,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,
0XC0,0X0F,0X80,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,0X80,0X00,0X00,
0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XCF,0XEF,0X80,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,
0XFF,0XCF,0XEF,0X80,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XCF,0XEF,0X80,0X00,
0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,0XE0,0X00,0X00,0X00,0X03,0XFD,0XFF,
0XFF,0XFF,0XF0,0X1F,0XE0,0X00,0X00,0X00,0X03,0XFD,0XFF,0XFF,0XFF,0XF0,0X1F,0XE0,
0X00,0X00,0X00,0X07,0XF0,0X3F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X0F,0XF0,
0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X07,0XE0,0X1F,0XFF,0XFF,0XCF,0XEF,
0XF0,0X00,0X00,0X00,0X07,0XE0,0X1F,0XFF,0XFF,0XCF,0XEF,0XF0,0X00,0X00,0X00,0X07,
0XE0,0X07,0XFF,0XFF,0X00,0X0F,0XF0,0X00,0X00,0X00,0X03,0XE0,0X07,0XFF,0XFF,0X00,
0X0F,0XF0,0X00,0X00,0X00,0X03,0XE0,0X07,0XFF,0XFF,0X00,0X0F,0XF0,0X00,0X00,0X00,
0X03,0XF0,0X07,0XFF,0XFF,0XCF,0XFF,0XE0,0X00,0X00,0X00,0X03,0XF0,0X07,0XFF,0XFF,
0XFF,0XFF,0XE0,0X00,0X00,0X00,0X03,0XF0,0X07,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,
0X00,0X03,0XE0,0X07,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X07,0XE0,0X1F,0XFF,
0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X07,0XE0,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,
0X00,0X00,0X07,0XF0,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X07,0XFC,0X3F,
0X1F,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X07,0XFC,0X7C,0X1F,0XFF,0XFF,0XFF,0XE0,
0X00,0X00,0X00,0X07,0XFC,0X7C,0X1F,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X0F,0XFF,
0XFC,0X0F,0XFF,0XC7,0XFF,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFC,0X0F,0XFF,0XC0,0X3F,
0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFC,0X0F,0XFF,0XC0,0X3F,0XF8,0X00,0X00,0X01,0XFF,
0XFF,0XFF,0X1F,0XFF,0XF8,0X01,0XFE,0X00,0X00,0X01,0XFF,0XFF,0XFF,0X9F,0XFF,0XF8,
0X00,0XFE,0X00,0X00,0X01,0XFF,0XFF,0XFF,0X9F,0XFF,0XF8,0X00,0XFF,0X00,0X00,0X01,
0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X3E,0XFF,0XC0,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC7,0XFE,0XFF,0XC0,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,
0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X03,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X0F,0XFF,0XE0,
0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X0F,0XFF,0XE0,0X00,0X0F,0XFF,0XFF,0XFF,
0XFF,0XFC,0X00,0X0F,0XFF,0XF8,0X0E,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,0XEF,0XFF,
0XF8,0X0E,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,0XEF,0XFF,0XFE,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XCF,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC0,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,0XFF,0XE0,0X00,0X00,0X00,0X03,0XFF,0XFF,
0XFF,0XFF,0XEF,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XEF,0XFF,0XE7,
0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XEF,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,
0XFF,0XFF,0XC0,0X0F,0XFF,0XE7,0XFF,0X3F,0XBF,0XF3,0XFF,0XFF,0XFF,0XC0,0X1F,0XFF,
0XE7,0XFF,0X3F,0XBF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0X3F,0XBF,0XF3,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0X3F,0XBF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE7,0XFF,0XCE,0X7F,0XF3,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XE7,0XFF,0XCE,0X7F,
0XF3,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XE7,0XFF,0XF0,0X7F,0XF3,0XFF,0XFF,0XFF,0XC0,
0X0F,0XFF,0XE7,0XFF,0XDF,0XFF,0XF3,0XFF,0XFF,0XFF,0XCF,0XEF,0XFF,0XE7,0XFF,0XDF,
0XFF,0XF3,0XFF,0XFF,0XFF,0XCF,0XEF,0XFF,0XE7,0XFF,0X2F,0XFF,0XF3,0XFF,0XFF,0XFF,
0XCF,0XEF,0XFF,0XE7,0XFF,0XDF,0XFF,0XF3,0XFF,0XFF,0XFF,0XC0,0X0F,0XFF,0XE7,0XFF,
0XDF,0XFF,0XF3,0XFF,0XFF,0XFF,0XC0,0X0F,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,
0XFF,0XF0,0X1F,0XFF,0XE7,0XFF,0XDC,0X7F,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,
0XFF,0XD3,0XBF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XD3,0XBF,0XF3,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XD3,0XBF,0XF3,0XFF,0XFF,0XFC,0X00,0X0F,0XFF,
0XE7,0XFF,0XE2,0X7F,0XF3,0XFF,0XFF,0XFC,0X00,0X0F,0XFF,0XE7,0XFF,0XE2,0X7F,0XF3,
0XFF,0XFF,0XFC,0X00,0X0F,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE7,0XFF,0XC3,0XBF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XC3,0XBF,
0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XDD,0XBF,0XF3,0XFF,0XFF,0XFF,0XF7,
0XDF,0XFF,0XE7,0XFF,0XDE,0X3F,0XF3,0XFF,0XFF,0XFF,0XC7,0XCF,0XFF,0XE7,0XFF,0XEF,
0XBF,0XF3,0XFF,0XFF,0XFF,0XCF,0XEF,0XFF,0XE7,0XFF,0XEF,0XBF,0XF3,0XFF,0XFF,0XFF,
0XCF,0XEF,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XCF,0XEF,0XFF,0XE7,0XFF,
0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XC0,0X0F,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,
0XFF,0XC0,0X0F,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XE7,
0XFF,0XDF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XDF,0XFF,0XF3,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XE1,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE7,0XFF,0XFE,0X3F,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XFE,0X3F,0XF3,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XFF,0XFF,
0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0X3F,
0XBF,0XF3,0XFF,0XFF,0XFF,0XF7,0X1F,0XFF,0XE7,0XFF,0X3F,0XBF,0XF3,0XFF,0XFF,0XFF,
0XF7,0X1F,0XFF,0XE7,0XFF,0X3F,0XBF,0XF3,0XFF,0XFF,0XFF,0XC6,0X0F,0XFF,0XE7,0XFF,
0X3F,0XBF,0XF3,0XFF,0XFF,0XFF,0XCE,0XEF,0XFF,0XE7,0XFF,0X3F,0XBF,0XF3,0XFF,0XFF,
0XFF,0XCE,0XEF,0XFF,0XE7,0XFF,0XCE,0X7F,0XF3,0XFF,0XFF,0XFF,0XCE,0XEF,0XFF,0XE7,
0XFF,0XF0,0X7F,0XF3,0XFF,0XFF,0XFF,0XC0,0XCF,0XFF,0XE7,0XFF,0XDF,0XFF,0XF3,0XFF,
0XFF,0XFF,0XF1,0XDF,0XFF,0XE7,0XFF,0XDF,0XFF,0XF3,0XFF,0XFF,0XFF,0XF1,0XDF,0XFF,
0XE7,0XFF,0X2F,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XDF,0XFF,0XF3,
0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XE7,0XFF,0XDF,0XFF,0XF3,0XFF,0XFF,0XFC,0X3F,0XFF,
0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XE7,0XFF,0XC0,0X3F,
0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XC0,0X3F,0XF3,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XE7,0XFF,0XDF,0XBF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XDF,
0XBF,0XF3,0XFF,0XFF,0XFF,0XCF,0XEF,0XFF,0XE7,0XFF,0XDF,0XBF,0XF3,0XFF,0XFF,0XFF,
0XCF,0XEF,0XFF,0XE7,0XFF,0XC0,0X3F,0XF3,0XFF,0XFF,0XFF,0X00,0X0F,0XFF,0XE7,0XFF,
0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0X00,0X0F,0XFF,0XE7,0XFF,0XC3,0XBF,0XF3,0XFF,0XFF,
0XFF,0XCF,0XFF,0XFF,0XE7,0XFF,0XC3,0XBF,0XF3,0XFF,0XFF,0XFF,0XCF,0XFF,0XFF,0XE7,
0XFF,0XDD,0XBF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XDE,0X3F,0XF3,0XFF,
0XFF,0XFC,0X00,0X0F,0XFF,0XE7,0XFF,0XDE,0X3F,0XF3,0XFF,0XFF,0XFC,0X00,0X0F,0XFF,
0XE7,0XFF,0XEF,0XBF,0XF3,0XFF,0XFF,0XFC,0X00,0X0F,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE7,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X00,
0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF};



#define EPD_CS     A17
#define EPD_DC     A16
#define SRAM_CS     -1 // we don't use SRAM
#define EPD_RESET   A15 // can set to -1 and share with microcontroller Reset!
#define EPD_BUSY    A14 // can set to -1 to not use a pin (will wait a fixed delay)

// Uncomment the following line if you are using 1.54" EPD with IL0373
//Adafruit_IL0373 display(152, 152, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);
// Uncomment the following line if you are using 1.54" EPD with SSD1680
//Adafruit_SSD1680 display(152, 152, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);
// Uncomment the following line if you are using 1.54" EPD with SSD1608
//Adafruit_SSD1608 display(200, 200, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);
// Uncomment the following line if you are using 1.54" EPD with SSD1681
//Adafruit_SSD1681 display(200, 200, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);
// Uncomment the following line if you are using 1.54" EPD with UC8151D
//Adafruit_UC8151D display(152, 152, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);


//Uncomment the following line if you are using 2.13" EPD with SSD1680
//Adafruit_SSD1680 display(250, 122, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);

// Uncomment the following line if you are using 2.13" EPD with SSD1675
//Adafruit_SSD1675 display(250, 122, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);

// Uncomment the following line if you are using 2.13" EPD with SSD1675B
//Adafruit_SSD1675B display(250, 122, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);

// Uncomment the following line if you are using 2.13" EPD with UC8151D
//Adafruit_UC8151D display(212, 104, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);

//Uncomment the following line if you are using 2.13" EPD with IL0373
//Adafruit_IL0373 display(212, 104, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);
//#define FLEXIBLE_213

GDEW0097T50 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);

//Uncomment the following line if you are using 2.7" EPD with IL91874
//Adafruit_IL91874 display(264, 176, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS);

// Uncomment the following line if you are using 2.7" EPD with EK79686
//Adafruit_EK79686 display(264, 176, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);


// Uncomment the following line if you are using 2.9" EPD with IL0373
//Adafruit_IL0373 display(296, 128, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);
//#define FLEXIBLE_290

// Uncomment the following line if you are using 2.9" EPD with SSD1680
//Adafruit_SSD1680 display(296, 128, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);

// Uncomment the following line if you are using 2.9" EPD with UC8151D
//Adafruit_UC8151D display(296, 128, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);


#define COLOR1 EPD_BLACK
#define COLOR2 EPD_RED


void setup() {
  Serial.begin(115200);
  //while (!Serial) { delay(10); }
  Serial.println("Adafruit EPD test");
  
   display.begin();
//   display.priv_setup();
// #if defined(FLEXIBLE_213) || defined(FLEXIBLE_290)
//   // The flexible displays have different buffers and invert settings!
//   display.setBlackBuffer(1, false);
//   display.setColorBuffer(1, false);
// #endif

  // large block of text
  display.clearBuffer();
  // testdrawtext(" Hello word ", COLOR1);

  display.private_display();
 // display.display();

  delay(5000);
  
    display.private_display2();


  // display.clearBuffer();
  // for (int16_t i=0; i<display.width(); i+=4) {
  //   display.drawLine(0, 0, i, display.height()-1, COLOR1);
  // }

  // for (int16_t i=0; i<display.height(); i+=4) {
  //   display.drawLine(display.width()-1, 0, 0, i, COLOR2);  // on grayscale this will be mid-gray
  // }
  // display.display();
}

void loop() {
  //don't do anything!
}


void testdrawtext(const char *text, uint16_t color) {
  display.setCursor(0, 0);
  display.setTextColor(color);
  display.setTextWrap(true);
  display.print(text);
}
